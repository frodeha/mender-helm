{{- if .Values.mongodb.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mender.fullname" . }}-mongodb
  labels:
    {{- include "mender.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ include "mender.fullname" . }}-mongodb
    app.kubernetes.io/component: mongodb
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-100"
spec:
  replicas: 1
  strategy:
    type: Recreate  # For single instance with persistent volume
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mender.fullname" . }}-mongodb
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mender.fullname" . }}-mongodb
        app.kubernetes.io/component: mongodb
    spec:
      containers:
      - name: mongodb
        image: {{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}
        imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: {{ .Values.mongodb.auth.rootUsername | quote }}
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "mender.fullname" . }}-mongodb
              key: mongodb-root-password
        {{- if .Values.mongodb.auth.database }}
        - name: MONGO_INITDB_DATABASE
          value: {{ .Values.mongodb.auth.database | quote }}
        {{- end }}
        ports:
        - name: mongodb
          containerPort: 27017
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 10
        resources:
          {{- toYaml .Values.mongodb.resources | nindent 10 }}
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        {{- if .Values.mongodb.initScripts }}
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        {{- end }}
      volumes:
      - name: mongodb-data
        {{- if .Values.mongodb.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "mender.fullname" . }}-mongodb-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.mongodb.initScripts }}
      - name: init-scripts
        configMap:
          name: {{ include "mender.fullname" . }}-mongodb-init
          defaultMode: 0755
      {{- end }}
      {{- $ips := coalesce .Values.mongodb.imagePullSecrets .Values.default.imagePullSecrets  }}
      {{- if $ips }}
      imagePullSecrets:
      {{- toYaml $ips | nindent 6 }}
      {{- end }}
{{- end }}
